
//METHODS
#include <iostream>
#include <cmath>
#include <vector>
#include <random>
#include "Character.h"


void Character:: player_health()
{
    cout<<"Your current health is: "<<health<<endl;
}


void Character:: player_attack()
{
    return attack;//////////////
}



void Character:: takeDamage(int damage)
{
    health -= damage;
    if ((health==0) || (health<0))
    {
        Death();
    }
    else
    {
    cout<<"You've taken some damage!"<<"\t"<<endl;
    cout<<"Your current health is: "<<health<<"\t"<<endl;
    }

}


void Character::Death()
{
    dead=true;
}


void Character::TakeMedKit()
{
    health+=medkit(10);
    //myInventory.subtract_medkit(10);////
}


void Character::DisplayPlayerStats()
{  
    cout<<"Your current health is: "<<health<<endl;
}



/*-------------------------------------------------------------------------------*/
class Inventory
{
    public:
    //vector<string> arsenal(1);
    vector<int> medkit;
    string weapon;
    void print_weapon();
    

    subtract_medkit()
    {
        medkit=medkit-10;
        cout<< "Your current medkit is: "<<medkit<<endl;
    }

    add_medkit()
    {
        medkit=medkit+10;
        cout<< "Your current medkit is: "<<medkit<<endl;

    }
};




int main() ///PLAYER TEST 
{
Inventory myInventory;
    myInventory.weapon="sword";
    myInventory.print_weapon();
    return 0;
Character myPlayer;
    myPlayer.health=100;
    myPlayer.player_health();
return 0;
}    

    

    



//need to instantiate Monster object at main??
//int main()
//Character Monster;
//Monster.attackStrength=
//Monster.health=


//Inventory myInventory;
//myInventory.medkit;

